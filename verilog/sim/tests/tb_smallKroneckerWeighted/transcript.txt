# transcript.txt
do ./init_test.do
# qaz_libs
# ../../../..
# ../../..
# ../../../../qaz_libs
# fpga
# hexadecimal
# INFO: Simulation library work already exists
# INFO: Rebuilding library. Deleting ./work and recompiling all
# End time: 11:11:49 on Dec 03,2019, Elapsed time: 0:00:32
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work work 
# Modifying C:/qaz/projects/snn/sim/tests/tb_smallKroneckerWeighted/tb_smallKroneckerWeighted.mpf
# INFO: compiling tb_packages rtl
# INFO: compiling ../../../../qaz_libs/sim/libs/tb_packages_verilog/BFM.f
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 11:11:49 on Dec 03,2019
# vlog -reportprogress 300 -f ../../../../qaz_libs/sim/libs/tb_packages_verilog/BFM.f 
# -- Compiling package video_frame_pkg
# 
# Top level modules:
# 	--none--
# End time: 11:11:49 on Dec 03,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# INFO: compiling bfm_packages rtl
# INFO: compiling ../../../../qaz_libs/sim/libs/bfm_packages_verilog/BFM.f
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 11:11:49 on Dec 03,2019
# vlog -reportprogress 300 -f ../../../../qaz_libs/sim/libs/bfm_packages_verilog/BFM.f 
# -- Compiling package tb_pkg
# ** Warning: ..\..\..\..\qaz_libs\BFM\src\tb\random_delay.svh(48): (vlog-2186) SystemVerilog testbench feature
# (randomization, coverage or assertion) detected in the design.
# These features are only supported in Questasim.
# ** Warning: ..\..\..\..\qaz_libs\BFM\src\tb\random_delay.svh(49): (vlog-2186) SystemVerilog testbench feature
# (randomization, coverage or assertion) detected in the design.
# These features are only supported in Questasim.
# 
# Top level modules:
# 	--none--
# End time: 11:11:49 on Dec 03,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
# INFO: compiling axi4_lib rtl
# INFO: compiling ../../../../qaz_libs/sim/libs/axi4_lib_verilog/axi4_base.f
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 11:11:49 on Dec 03,2019
# vlog -reportprogress 300 -f ../../../../qaz_libs/sim/libs/axi4_lib_verilog/axi4_base.f 
# -- Compiling interface axi4_if
# -- Compiling module axi4_s_to_read_fifos
# -- Compiling module axi4_s_to_write_fifos
# -- Compiling module axi4_m_to_read_fifos
# -- Compiling module axi4_m_to_write_fifos
# -- Compiling module axi4_register_slice
# 
# Top level modules:
# 	axi4_m_to_read_fifos
# 	axi4_m_to_write_fifos
# 	axi4_register_slice
# End time: 11:11:49 on Dec 03,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# INFO: compiling ../../../../qaz_libs/sim/libs/axi4_lib_verilog/axi4_lite_base.f
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 11:11:49 on Dec 03,2019
# vlog -reportprogress 300 -f ../../../../qaz_libs/sim/libs/axi4_lib_verilog/axi4_lite_base.f 
# -- Compiling interface axi4_lite_register_if
# -- Compiling module axi4_lite_register_file
# 
# Top level modules:
# 	axi4_lite_register_file
# End time: 11:11:49 on Dec 03,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# INFO: compiling ../../../../qaz_libs/sim/libs/axi4_lib_verilog/axi4_stream_base.f
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 11:11:49 on Dec 03,2019
# vlog -reportprogress 300 -f ../../../../qaz_libs/sim/libs/axi4_lib_verilog/axi4_stream_base.f 
# -- Compiling interface axis_if
# -- Compiling module axis_register_slice
# -- Compiling module axis_map_fifo
# -- Compiling module axis_mux
# -- Compiling module axis_alias
# -- Compiling module axis_downsizer
# -- Compiling module axis_upsizer
# -- Compiling module axis_eop_set
# -- Compiling module axis_eop_mux
# -- Compiling module axis_catenate
# -- Compiling module axis_switch
# -- Compiling module axis_fanout
# -- Compiling module recursive_axis_catenate
# 
# Top level modules:
# 	axis_downsizer
# 	axis_upsizer
# 	axis_switch
# 	axis_fanout
# End time: 11:11:49 on Dec 03,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# INFO: compiling qaz_lib rtl
# INFO: compiling ../../../../qaz_libs/sim/libs/qaz_lib_verilog/basal.f
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 11:11:49 on Dec 03,2019
# vlog -reportprogress 300 -f ../../../../qaz_libs/sim/libs/qaz_lib_verilog/basal.f 
# -- Compiling module bc_sync_fifo
# -- Compiling module sync_fifo
# ** Warning: ../../../../qaz_libs/basal/src/FIFOs/sync_fifo.sv(57): (vlog-2583) [SVCHK] - Some checking for conflicts with always_comb and always_latch variables not yet supported. Run vopt to provide additional design-level checks.
# ** Warning: ../../../../qaz_libs/basal/src/FIFOs/sync_fifo.sv(58): (vlog-2583) [SVCHK] - Some checking for conflicts with always_comb and always_latch variables not yet supported. Run vopt to provide additional design-level checks.
# ** Warning: ../../../../qaz_libs/basal/src/FIFOs/sync_fifo.sv(59): (vlog-2583) [SVCHK] - Some checking for conflicts with always_comb and always_latch variables not yet supported. Run vopt to provide additional design-level checks.
# ** Warning: ../../../../qaz_libs/basal/src/FIFOs/sync_fifo.sv(60): (vlog-2583) [SVCHK] - Some checking for conflicts with always_comb and always_latch variables not yet supported. Run vopt to provide additional design-level checks.
# -- Compiling module tiny_sync_fifo
# -- Compiling module one_hot_encoder
# -- Compiling module recursive_mux
# -- Compiling module sr_latch
# -- Compiling module bram_tdp
# -- Compiling module synchronizer
# -- Compiling module sync_reset
# 
# Top level modules:
# 	sync_fifo
# 	sr_latch
# 	bram_tdp
# 	synchronizer
# 	sync_reset
# End time: 11:11:50 on Dec 03,2019, Elapsed time: 0:00:01
# Errors: 0, Warnings: 4
# INFO: compiling sim rtl
# INFO: compiling ../../../../qaz_libs/sim/libs/sim_verilog/BFM.f
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 11:11:50 on Dec 03,2019
# vlog -reportprogress 300 -f ../../../../qaz_libs/sim/libs/sim_verilog/BFM.f 
# -- Compiling module tb_base
# 
# Top level modules:
# 	tb_base
# End time: 11:11:50 on Dec 03,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 11:11:50 on Dec 03,2019
# vlog -reportprogress 300 -f ../../libs/snn.f 
# -- Compiling package snn_pkg
# -- Compiling interface synapse_if
# -- Compiling module synapse_delay
# -- Compiling module synapse
# -- Compiling package neuron_sv_unit
# -- Importing package snn_pkg
# -- Compiling module neuron
# -- Compiling package neuron_block_sv_unit
# -- Importing package snn_pkg
# -- Compiling module neuron_block
# -- Compiling package network_sv_unit
# -- Importing package snn_pkg
# -- Compiling module network
# -- Compiling package project_top_sv_unit
# -- Importing package snn_pkg
# -- Compiling module project_top
# -- Compiling module tb_top
# 
# Top level modules:
# 	tb_top
# End time: 11:11:50 on Dec 03,2019, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -f ./sim.f work.tb_top 
# Start time: 11:11:50 on Dec 03,2019
# Loading sv_std.std
# Loading work.snn_pkg
# Loading work.tb_top
# Loading work.tb_base
# Loading work.axis_if
# Loading work.project_top_sv_unit
# Loading work.project_top
# Loading work.network_sv_unit
# Loading work.network
# Loading work.neuron_block_sv_unit
# Loading work.neuron_block
# Loading work.recursive_axis_catenate
# Loading work.axis_alias
# Loading work.synapse_if
# Loading work.synapse
# Loading work.neuron_sv_unit
# Loading work.neuron
# Loading work.synapse_delay
# Loading work.axis_catenate
# Loading work.axis_eop_mux
# Loading work.recursive_mux
# Loading work.axis_mux
# Loading work.axis_register_slice
# Loading work.tiny_sync_fifo
# Loading work.axis_map_fifo
# Loading work.axis_eop_set
# ================================================================================
### do_test | block =           0 | neuron =           0 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|   0|29302|  84|  18|  17|  18|  24|   7|  28|  18|  18|  83|  55|  65| 157|   9|  36|  29|  37|   6|  61|  35|  15|  26|   1|  11|  29| 173|   4|  38|  20|  14|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =           1 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|29302|   0|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|29302|
# [   0] :|00000000|00000001|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|00000000|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =           2 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  84|29302|   0| 100|  99| 100| 108|  89| 112| 100| 100| 167| 137| 147| 239|  93| 118| 111| 121|  88| 143| 117|  99|  84|  83|  93| 111| 250|  80| 120| 102|  96|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =           3 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  18|29302| 100|   0|  23|  24|  20|  13|  41|  24|  24|  95|  61|  71| 163|  22|  42|  35|  49|  12|  67|  41|  27|  32|  17|  17|  35| 186|  20|  37|  19|  20|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =           4 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  17|29302|  99|  23|   0|  21|  35|  12|  40|  23|  13|  94|  58|  70| 162|  21|  39|  34|  48|  11|  44|  40|  26|  31|  16|   8|  32| 185|  19|  52|  34|  19|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =           5 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  18|29302| 100|  24|  21|   0|  22|  13|  41|  24|  24|  81|  37|  69| 163|  22|  18|  35|  35|  12|  65|  31|  13|  32|  17|  17|  11| 186|  20|  53|  35|  20|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =           6 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  24|29302| 108|  20|  35|  22|   0|  25|  52|  36|  36|  77|  59|  65| 175|  33|  40|  47|  31|  24|  79|  53|   9|  44|  25|  29|  33| 197|  28|  49|  31|  16|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =           7 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|   7|29302|  89|  13|  12|  13|  25|   0|  30|  13|  13|  84|  50|  60| 152|  11|  31|  24|  38|   1|  56|  30|  16|  21|   6|   6|  24| 175|   9|  42|  24|   9|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =           8 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  28|29302| 112|  41|  40|  41|  52|  30|   0|  41|  41| 111|  78|  88| 180|  19|  59|  52|  65|  29|  84|  58|  43|  49|  29|  34|  52| 183|  32|  66|  48|  37|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =           9 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  18|29302| 100|  24|  23|  24|  36|  13|  41|   0|  24|  95|  61|  71| 163|  22|  42|  22|  49|  12|  67|  41|  27|  32|  17|  17|  18| 186|  20|  53|  35|  20|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          10 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  18|29302| 100|  24|  13|  24|  36|  13|  41|  24|   0|  95|  61|  71| 163|  22|  42|  35|  49|  12|  57|  41|  27|  32|  17|  17|  35| 186|  20|  53|  35|  20|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          11 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  83|29302| 167|  95|  94|  81|  77|  84| 111|  95|  95|   0| 118| 124| 234|  92|  99| 106|  46|  83| 138| 112|  68| 103|  84|  88|  92| 256|  87| 108|  90|  75|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          12 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  55|29302| 137|  61|  58|  37|  59|  50|  78|  61|  61| 118|   0| 106| 200|  59|  55|  72|  72|  49| 102|  68|  50|  69|  54|  54|  48| 223|  57|  90|  72|  57|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          13 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  65|29302| 147|  71|  70|  69|  65|  60|  88|  71|  71| 124| 106|   0| 210|  69|  87|  70|  78|  59| 114|  88|  56|  79|  64|  64|  80| 233|  67|  96|  78|  63|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          14 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :| 157|29302| 239| 163| 162| 163| 175| 152| 180| 163| 163| 234| 200| 210|   0| 161| 181| 174| 188| 151| 206| 180| 166| 171| 156| 156| 174| 325| 159| 192| 174| 159|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          15 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|   9|29302|  93|  22|  21|  22|  33|  11|  19|  22|  22|  92|  59|  69| 161|   0|  40|  33|  46|  10|  65|  39|  24|  30|  10|  15|  33| 164|  13|  47|  29|  18|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          16 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  36|29302| 118|  42|  39|  18|  40|  31|  59|  42|  42|  99|  55|  87| 181|  40|   0|  53|  53|  30|  83|  13|  31|  50|  35|  35|  29| 204|  38|  71|  53|  38|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          17 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  29|29302| 111|  35|  34|  35|  47|  24|  52|  22|  35| 106|  72|  70| 174|  33|  53|   0|  60|  23|  64|  52|  38|  43|  28|  28|  40| 197|  31|  64|  46|  31|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          18 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  37|29302| 121|  49|  48|  35|  31|  38|  65|  49|  49|  46|  72|  78| 188|  46|  53|  60|   0|  37|  92|  66|  22|  57|  38|  42|  46| 210|  41|  62|  44|  29|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          19 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|   6|29302|  88|  12|  11|  12|  24|   1|  29|  12|  12|  83|  49|  59| 151|  10|  30|  23|  37|   0|  55|  29|  15|  20|   5|   5|  23| 174|   8|  41|  23|   8|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          20 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  61|29302| 143|  67|  44|  65|  79|  56|  84|  67|  57| 138| 102| 114| 206|  65|  83|  64|  92|  55|   0|  84|  70|  75|  60|  52|  76| 229|  63|  96|  78|  63|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          21 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  35|29302| 117|  41|  40|  31|  53|  30|  58|  41|  41| 112|  68|  88| 180|  39|  13|  52|  66|  29|  84|   0|  44|  49|  34|  34|  42| 203|  37|  70|  52|  37|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          22 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  15|29302|  99|  27|  26|  13|   9|  16|  43|  27|  27|  68|  50|  56| 166|  24|  31|  38|  22|  15|  70|  44|   0|  35|  16|  20|  24| 188|  19|  40|  22|   7|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          23 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  26|29302|  84|  32|  31|  32|  44|  21|  49|  32|  32| 103|  69|  79| 171|  30|  50|  43|  57|  20|  75|  49|  35|   0|  25|  25|  43| 166|  28|  61|  43|  28|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          24 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|   1|29302|  83|  17|  16|  17|  25|   6|  29|  17|  17|  84|  54|  64| 156|  10|  35|  28|  38|   5|  60|  34|  16|  25|   0|  10|  28| 174|   3|  37|  19|  13|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          25 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  11|29302|  93|  17|   8|  17|  29|   6|  34|  17|  17|  88|  54|  64| 156|  15|  35|  28|  42|   5|  52|  34|  20|  25|  10|   0|  28| 179|  13|  46|  28|  13|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          26 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  29|29302| 111|  35|  32|  11|  33|  24|  52|  18|  35|  92|  48|  80| 174|  33|  29|  40|  46|  23|  76|  42|  24|  43|  28|  28|   0| 197|  31|  64|  46|  31|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          27 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :| 173|29302| 250| 186| 185| 186| 197| 175| 183| 186| 186| 256| 223| 233| 325| 164| 204| 197| 210| 174| 229| 203| 188| 166| 174| 179| 197|   0| 171| 211| 193| 182|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          28 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|   4|29302|  80|  20|  19|  20|  28|   9|  32|  20|  20|  87|  57|  67| 159|  13|  38|  31|  41|   8|  63|  37|  19|  28|   3|  13|  31| 171|   0|  40|  22|  16|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          29 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  38|29302| 120|  37|  52|  53|  49|  42|  66|  53|  53| 108|  90|  96| 192|  47|  71|  64|  62|  41|  96|  70|  40|  61|  37|  46|  64| 211|  40|   0|  18|  33|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          30 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  20|29302| 102|  19|  34|  35|  31|  24|  48|  35|  35|  90|  72|  78| 174|  29|  53|  46|  44|  23|  78|  52|  22|  43|  19|  28|  46| 193|  22|  18|   0|  15|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
# ================================================================================
### do_test | block =           0 | neuron =          31 |
# --------------------------------------------------------------------------------
# [block]:| == neuron == n[0]| n[1]| ...| n[N]| ==================================
# [   0] :|  14|29302|  96|  20|  19|  20|  16|   9|  37|  20|  20|  75|  57|  63| 159|  18|  38|  31|  29|   8|  63|  37|   7|  28|  13|  13|  31| 182|  16|  33|  15|   0|
# [   0] :|000fffff|00000000|0000007f|0000001f|000003ff|00007fff|00001fff|0000001f|0000001f|000003ff|000007ff|00000001|00000007|0000000f|00000001|0003ffff|000001ff|00001fff|0000000f|07ffffff|0000007f|00000007|0007ffff|000001ff|0001ffff|00000fff|00000fff|0000000f|00003fff|0000001f|000fffff|000007ff|
#### dump_results Done ####
#### Test Done!!!
# ** Note: $stop    : ./tb_top.sv(126)
#    Time: 9394925 ns  Iteration: 1  Instance: /tb_top
# Break in Module tb_top at ./tb_top.sv line 126
# End time: 11:37:28 on Dec 03,2019, Elapsed time: 0:25:38
# Errors: 0, Warnings: 0
